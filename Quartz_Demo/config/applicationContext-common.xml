<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">

     <context:component-scan base-package="com.xu.test" />
     
<!-- 第一种集成方式：MethodInvokingJobDetailFactoryBean，并且job类，直接是pojo类，与普通类没有区别 -->
	<!-- 定义具体的任务类 -->
	<bean id="job" class="com.xu.test.quartz.QuartzTest1" />

	<!-- 定义jobDetail -->
	<bean id="jobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<!-- 目标类 -->
		<property name="targetObject">
			<ref bean="job" />
		</property>
		<!-- 目标类中要执行的方法 ,这个参数是必须的 -->
	 	<property name="targetMethod">
			  <value>execute</value>
		</property>
	</bean>  
	
<!-- 第二种方式： -->
<!-- 第二种集成方式：MethodInvokingJobDetailFactoryBean，并且任务类，是需要继承QuartzJobBean-->
	<!-- 定义jobDetail -->
	<bean id="jobDetail2" class="org.springframework.scheduling.quartz.JobDetailBean">
	    <!-- 目标类: 将此Job类的实例直接配置到JobDetailBean中 -->
    <property name="jobClass" value="com.xu.test.quartz.QuartzTest2"></property>
        <!-- 在这个例子中，jobDataAsMap没有用，此目标类中接受的参数 ,若参数为service，则可以在此进行参数配置，类似struts2 -->
       <property name="jobDataAsMap">  
		<map>  
		    <entry key="service"><value>simple is the beat</value></entry>  
		</map>  
     </property>
     </bean>
	

	<!-- 定义simpleTrigger触发器 -->
	<bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="jobDetail2"></property>
		<!-- 重复次数，如果不配置，就循环！-->
		<!-- <property name="repeatCount">
			<value>4</value>
		</property> -->
		<!-- 10秒重复一次-->
		<property name="repeatInterval">
			<value>10000</value>
		</property>
		<!--开始延时时间 -->
        <property name="startDelay">
            <value>16</value>
        </property>
	</bean>
	
	<!-- 另一种触发器是CornTrigger -->
 	<!-- <bean id="cornTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
	   <property name="jobDetail" ref="jobDetail"/>
	   下午3点51分
	   <property name="cronExpression" value="0 0/1 * * * ?"/>
	</bean> --> 
	
	<!-- 定义核心调度器 -->
	<bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
	  <property name="triggers">
	    <ref bean="simpleTrigger"/>
	  </property>
	</bean>
</beans>